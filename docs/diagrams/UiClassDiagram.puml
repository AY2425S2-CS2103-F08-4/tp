@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor UI_COLOR_T4
skinparam classBackgroundColor UI_COLOR

package UI <<Rectangle>> {
Class "<<interface>>\nUi" as Ui
Class "{abstract}\nUiPart<T>" as UiPart
Class UiManager
Class MainWindow
Class ResultDisplay
Class CommandBox
Class ListPanel
Class DisplayableListViewCell

package "card" as card {
Class "<<interface>>\nCard<T>" as Card
Class "<<interface>>\nCardFactory<T>" as CardFactory
Class "GenericCardFactory<T>" as GenericCardFactory
Class XCard
}

package "util" as util {
Class "<<interface>>\nDisplayableItem" as DisplayableItem
Class "{abstract}\nItemAdapter<T>" as ItemAdapter
Class "GenericAdapter<T>" as GenericAdapter
}
}

package Model <<Rectangle>> {
Class X
}

package Logic <<Rectangle>> {
Class HiddenLogic #FFFFFF
}

UiManager .up.|> Ui
GenericCardFactory ..|> CardFactory
XCard ..|> Card
GenericAdapter ..|> ItemAdapter
ItemAdapter ..|> DisplayableItem

MainWindow --|> UiPart
ResultDisplay --|> UiPart
CommandBox --|> UiPart
ListPanel --|> UiPart
XCard --|> UiPart
DisplayableListViewCell --|> UiPart

MainWindow *--> "1" CommandBox
MainWindow *--> "1" ResultDisplay
MainWindow *--> "2" ListPanel
ListPanel o--> "*" DisplayableListViewCell

UiManager --> "1" MainWindow
DisplayableListViewCell --> DisplayableItem : renders
XCard ..> DisplayableItem : < getDisplayCard() creates
Card --> UiPart : getUiPart() returns >
GenericCardFactory --> Card : creates >
XCard --> X: references >
GenericAdapter --> X
ItemAdapter o--> CardFactory

UiManager --> Logic
MainWindow --> Logic
ListPanel --> Logic : accesses filtered lists >
MainWindow ..> GenericCardFactory
MainWindow ..> GenericAdapter : wraps model items

@enduml